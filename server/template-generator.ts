import * as XLSX from 'xlsx';
import { join } from 'path';

export interface TemplateVariant {
  name: string;
  filename: string;
  description: string;
  data: any[][];
}

// Вариант 1: Формат как в текущем расписании (точная копия)
export function createWeeklyTemplate(): TemplateVariant {
  const data = [
    ['РАСПИСАНИЕ ЗАНЯТИЙ ТАВРИЧЕСКОГО КОЛЛЕДЖА', '', '', '', '', ''],
    ['', '', '', '', '', ''],
    ['Дні', '№', 'Час', 'МЕТ-11', 'МТ-11', 'ЕкДп-11', 'А-11'],
    ['ПОНЕДІЛОК', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['ВІВТОРОК', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['', '5', '15.10-16.30', '', '', '', ''],
    ['СЕРЕДА', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['ЧЕТВЕР', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['П\'ЯТНИЦЯ', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['ІНСТРУКЦІЯ ПО ЗАПОВНЕННЮ:'],
    ['1. У кожну клітинку групи вписуйте:'],
    ['   Назва предмету'],
    ['   Прізвище викладача'],
    ['   Аудиторія'],
    [''],
    ['ПРИКЛАД:'],
    ['   Математика'],
    ['   Іванов О.І.'],
    ['   каб. 101'],
    [''],
    ['2. Якщо заняття немає - залиште клітинку пустою'],
    ['3. Групи можна змінювати у заголовку стовпців']
  ];

  return {
    name: 'Як зараз (Український формат)',
    filename: 'template_current_format.xlsx',
    description: 'Точна копія вашого поточного формату розкладу. Найзвичніший для заповнення.',
    data
  };
}

// Вариант 2: Русский формат (аналогичный украинскому)
export function createSimpleListTemplate(): TemplateVariant {
  const data = [
    ['РАСПИСАНИЕ ЗАНЯТИЙ ТАВРИЧЕСКОГО КОЛЛЕДЖА', '', '', '', '', ''],
    ['', '', '', '', '', ''],
    ['Дни', '№', 'Время', 'ИТ-21', 'ИТ-22', 'ЭК-21', 'А-21'],
    ['ПОНЕДЕЛЬНИК', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['ВТОРНИК', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['', '5', '15.10-16.30', '', '', '', ''],
    ['СРЕДА', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['ЧЕТВЕРГ', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['ПЯТНИЦА', '1', '9.00-10.20', '', '', '', ''],
    ['', '2', '10.30-11.50', '', '', '', ''],
    ['', '3', '12.10-13.30', '', '', '', ''],
    ['', '4', '13.40-15.00', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['ИНСТРУКЦИЯ ПО ЗАПОЛНЕНИЮ:'],
    ['1. В каждую ячейку группы вписывайте:'],
    ['   Название предмета'],
    ['   Фамилия преподавателя'],
    ['   Аудитория'],
    [''],
    ['ПРИМЕР:'],
    ['   Математика'],
    ['   Иванов А.И.'],
    ['   каб. 101'],
    [''],
    ['2. Если занятия нет - оставьте ячейку пустой'],
    ['3. Группы можно изменять в заголовке столбцов']
  ];

  return {
    name: 'Русский формат',
    filename: 'template_russian_format.xlsx', 
    description: 'Формат на русском языке, аналогичный текущему украинскому.',
    data
  };
}

// Вариант 3: Простая таблица (каждое занятие отдельно)
export function createGroupBasedTemplate(): TemplateVariant {
  const data = [
    ['РАСПИСАНИЕ ЗАНЯТИЙ - ПРОСТАЯ ТАБЛИЦА'],
    [''],
    ['День недели', 'Время начала', 'Время окончания', 'Предмет', 'Преподаватель', 'Группа', 'Аудитория'],
    ['Понедельник', '9:00', '10:20', 'Математика', 'Иванов И.И.', 'ИТ-21', '101'],
    ['Понедельник', '10:30', '11:50', 'Программирование', 'Петров П.П.', 'ИТ-21', 'Лаб-1'],
    ['Понедельник', '9:00', '10:20', 'Базы данных', 'Сидоров С.С.', 'ИТ-22', '102'],
    ['Вторник', '9:00', '10:20', 'Английский язык', 'Смирнова А.А.', 'ЭК-21', '201'],
    [''],
    ['ИНСТРУКЦИЯ ПО ЗАПОЛНЕНИЮ:'],
    ['1. Каждое занятие - отдельная строка'],
    ['2. День недели: Понедельник, Вторник, Среда, Четверг, Пятница, Суббота'],
    ['3. Время в формате Ч:ММ (например: 9:00)'],
    ['4. Заполняйте все поля для каждого занятия'],
    [''],
    ['ПУСТЫЕ СТРОКИ ДЛЯ ЗАПОЛНЕНИЯ:'],
    ['', '', '', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['', '', '', '', '', '', ''],
    ['', '', '', '', '', '', '']
  ];

  return {
    name: 'Простая таблица',
    filename: 'template_simple_table.xlsx',
    description: 'Каждое занятие в отдельной строке. Легко заполнять построчно.',
    data
  };
}

// Вариант 4: Формат с отдельными столбцами для 20 групп
export function createTeacherTimeMatrix(): TemplateVariant {
  // Создаем список групп
  const groups = [
    'ИТ-21', 'ИТ-22', 'ИТ-23', 'ИТ-24', 'ИТ-25',
    'ЭК-21', 'ЭК-22', 'ЭК-23', 'ЭК-24', 'ЭК-25',
    'А-21', 'А-22', 'А-23', 'А-24', 'А-25',
    'М-21', 'М-22', 'М-23', 'М-24', 'М-25'
  ];

  // Создаем заголовок
  const headerRow1 = ['РАСПИСАНИЕ ЗАНЯТИЙ'];
  const headerRow2 = ['Время'];
  const headerRow3 = ['ПОНЕДЕЛЬНИК'];

  // Добавляем группы и подзаголовки
  groups.forEach(group => {
    headerRow1.push(group, '', '');
    headerRow2.push(group, '', '');
    headerRow3.push('Предмет', 'Преподаватель', 'Аудитория');
  });

  // Создаем пустые строки для заполнения
  const createEmptyRow = (timeSlot: string) => {
    const row = [timeSlot];
    groups.forEach(() => {
      row.push('', '', '');
    });
    return row;
  };

  const createDayRow = (day: string) => {
    const row = [day];
    groups.forEach(() => {
      row.push('', '', '');
    });
    return row;
  };

  const data = [
    headerRow1,
    [''],
    headerRow2,
    headerRow3,
    createEmptyRow('9:00-10:20'),
    createEmptyRow('10:30-11:50'),
    createEmptyRow('12:10-13:30'),
    createEmptyRow('13:40-15:00'),
    createDayRow('ВТОРНИК'),
    createEmptyRow('9:00-10:20'),
    createEmptyRow('10:30-11:50'),
    createEmptyRow('12:10-13:30'),
    createEmptyRow('13:40-15:00'),
    createEmptyRow('15:10-16:30'),
    createDayRow('СРЕДА'),
    createEmptyRow('9:00-10:20'),
    createEmptyRow('10:30-11:50'),
    createEmptyRow('12:10-13:30'),
    createEmptyRow('13:40-15:00'),
    createDayRow('ЧЕТВЕРГ'),
    createEmptyRow('9:00-10:20'),
    createEmptyRow('10:30-11:50'),
    createEmptyRow('12:10-13:30'),
    createEmptyRow('13:40-15:00'),
    createDayRow('ПЯТНИЦА'),
    createEmptyRow('9:00-10:20'),
    createEmptyRow('10:30-11:50'),
    createEmptyRow('12:10-13:30'),
    createEmptyRow('13:40-15:00'),
    [''],
    ['ИНСТРУКЦИЯ ПО ЗАПОЛНЕНИЮ:'],
    ['1. Заполняйте отдельно каждый столбец для каждой группы'],
    ['2. Предмет - в первый столбец группы'],
    ['3. Преподаватель - во второй столбец группы'],
    ['4. Аудитория - в третий столбец группы'],
    ['5. Если занятия нет - оставьте все три ячейки пустыми'],
    ['6. Можете удалить ненужные группы или добавить новые']
  ];

  return {
    name: 'Отдельные столбцы (20 групп)',
    filename: 'template_separate_columns.xlsx',
    description: 'Формат с отдельными столбцами для 20 групп. Каждая группа имеет 3 столбца: предмет, преподаватель, аудитория.',
    data
  };
}

// Вариант 5: Демо шаблон с 5 группами для примера
export function createDemoTemplate(): TemplateVariant {
  const groups = ['ИТ-21', 'ИТ-22', 'ЭК-21', 'А-21', 'М-21'];

  const headerRow1 = ['РАСПИСАНИЕ ЗАНЯТИЙ (ДЕМО - 5 ГРУПП)'];
  const headerRow2 = ['Время'];
  const headerRow3 = ['ПОНЕДЕЛЬНИК'];

  groups.forEach(group => {
    headerRow1.push(group, '', '');
    headerRow2.push(group, '', '');
    headerRow3.push('Предмет', 'Преподаватель', 'Аудитория');
  });

  const createEmptyRow = (timeSlot: string) => {
    const row = [timeSlot];
    groups.forEach(() => {
      row.push('', '', '');
    });
    return row;
  };

  const createDayRow = (day: string) => {
    const row = [day];
    groups.forEach(() => {
      row.push('', '', '');
    });
    return row;
  };

  // Добавляем пример заполнения
  const createExampleRow = (timeSlot: string) => {
    const row = [timeSlot];
    row.push('Математика', 'Иванов И.И.', 'каб.101'); // ИТ-21
    row.push('', '', ''); // ИТ-22
    row.push('Экономика', 'Петров П.П.', 'каб.201'); // ЭК-21
    row.push('', '', ''); // А-21
    row.push('', '', ''); // М-21
    return row;
  };

  const data = [
    headerRow1,
    [''],
    headerRow2,
    headerRow3,
    createExampleRow('9:00-10:20'),
    createEmptyRow('10:30-11:50'),
    createEmptyRow('12:10-13:30'),
    createEmptyRow('13:40-15:00'),
    createDayRow('ВТОРНИК'),
    createEmptyRow('9:00-10:20'),
    createEmptyRow('10:30-11:50'),
    createEmptyRow('12:10-13:30'),
    createEmptyRow('13:40-15:00'),
    createEmptyRow('15:10-16:30'),
    [''],
    ['ИНСТРУКЦИЯ:'],
    ['1. Каждая группа имеет 3 столбца: Предмет | Преподаватель | Аудитория'],
    ['2. Заголовки групп объединены в одну ячейку'],
    ['3. Заполняйте только нужные ячейки, пустые оставляйте незаполненными'],
    ['4. Этот шаблон показывает принцип работы для любого количества групп']
  ];

  return {
    name: 'Демо 5 групп',
    filename: 'template_demo_5groups.xlsx',
    description: 'Демонстрационный шаблон с 5 группами. Показывает принцип работы с объединенными ячейками.',
    data
  };
}

export function generateAllTemplates(): TemplateVariant[] {
  return [
    createWeeklyTemplate(),
    createSimpleListTemplate(),
    createGroupBasedTemplate(),
    createTeacherTimeMatrix(),
    createDemoTemplate()
  ];
}

export function saveTemplateToFile(template: TemplateVariant, outputDir: string = './templates'): string {
  const wb = XLSX.utils.book_new();
  const ws = XLSX.utils.aoa_to_sheet(template.data);

  // Настройки для разных шаблонов
  if (template.filename === 'template_separate_columns.xlsx') {
    // Специальные настройки для шаблона с отдельными столбцами (20 групп)
    const cols = [{ width: 12 }]; // Время
    for (let i = 0; i < 20; i++) {
      cols.push({ width: 15 }); // Предмет
      cols.push({ width: 20 }); // Преподаватель  
      cols.push({ width: 12 }); // Аудитория
    }
    ws['!cols'] = cols;
    
    // Объединение ячеек для заголовков групп (20 групп)
    const merges = [];
    for (let i = 0; i < 20; i++) {
      const startCol = 1 + (i * 3);
      const endCol = startCol + 2;
      merges.push({ s: { c: startCol, r: 2 }, e: { c: endCol, r: 2 } });
    }
    ws['!merges'] = merges;
  } else if (template.filename === 'template_demo_5groups.xlsx') {
    // Настройки для демо шаблона с 5 группами
    const cols = [{ width: 12 }]; // Время
    for (let i = 0; i < 5; i++) {
      cols.push({ width: 15 }); // Предмет
      cols.push({ width: 20 }); // Преподаватель  
      cols.push({ width: 12 }); // Аудитория
    }
    ws['!cols'] = cols;
    
    // Объединение ячеек для заголовков групп (5 групп)
    const merges = [];
    for (let i = 0; i < 5; i++) {
      const startCol = 1 + (i * 3);
      const endCol = startCol + 2;
      merges.push({ s: { c: startCol, r: 2 }, e: { c: endCol, r: 2 } });
    }
    ws['!merges'] = merges;
  } else {
    // Стандартные настройки
    ws['!cols'] = [
      { width: 15 }, { width: 25 }, { width: 25 }, { width: 25 },
      { width: 25 }, { width: 15 }, { width: 15 }, { width: 15 }
    ];
  }

  XLSX.utils.book_append_sheet(wb, ws, 'Расписание');

  const filePath = join(outputDir, template.filename);
  XLSX.writeFile(wb, filePath);
  
  return filePath;
}